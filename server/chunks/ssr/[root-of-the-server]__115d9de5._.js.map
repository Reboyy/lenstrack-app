{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 207, "column": 0}, "map": {"version":3,"sources":["file:///home/user/studio/src/ai/genkit.ts"],"sourcesContent":["import {genkit} from 'genkit';\nimport {googleAI} from '@genkit-ai/googleai';\n\nexport const ai = genkit({\n  plugins: [googleAI()],\n  model: 'googleai/gemini-2.0-flash',\n});\n"],"names":[],"mappings":";;;AAAA;AAAA;AACA;AAAA;;;AAEO,MAAM,KAAK,CAAA,GAAA,uIAAA,CAAA,SAAM,AAAD,EAAE;IACvB,SAAS;QAAC,CAAA,GAAA,2KAAA,CAAA,WAAQ,AAAD;KAAI;IACrB,OAAO;AACT","debugId":null}},
    {"offset": {"line": 228, "column": 0}, "map": {"version":3,"sources":["file:///home/user/studio/src/ai/flows/client-overview-flow.ts"],"sourcesContent":["'use server';\n/**\n * @fileOverview An AI flow for generating a comprehensive client overview.\n *\n * - generateClientOverview - A function that takes client data, projects, and logs to return a detailed summary.\n * - ClientOverviewInput - The input type for the generateClientOverview function.\n * - ClientOverviewOutput - The return type for the generateClientOverview function.\n */\n\nimport { ai } from '@/ai/genkit';\nimport { z } from 'genkit';\n\n// Schemas are not exported because of 'use server' constraints\nconst ClientSchema = z.object({\n  id: z.string(),\n  name: z.string(),\n  company: z.string(),\n  email: z.string(),\n  phone: z.string(),\n  project: z.string(),\n  status: z.enum([\"Active\", \"On Hold\", \"Completed\", \"Cancelled\"]),\n  cooperationDate: z.string(),\n  notes: z.string(),\n});\n\nconst ProjectSchema = z.object({\n  id: z.string(),\n  projectName: z.string(),\n  clientName: z.string(),\n  deadline: z.string(),\n  status: z.enum([\"In Progress\", \"Completed\", \"Pending\", \"Overdue\"]),\n  pic: z.string(),\n});\n\nconst LogSchema = z.object({\n  id: z.string(),\n  clientName: z.string(),\n  communicationDate: z.string(),\n  channel: z.enum([\"Email\", \"WhatsApp\", \"Meeting\"]),\n  notes: z.string(),\n});\n\n\nconst ClientOverviewInputSchema = z.object({\n  client: ClientSchema.describe(\"The client's primary data.\"),\n  projects: z.array(ProjectSchema).describe(\"A list of all projects associated with this client.\"),\n  logs: z.array(LogSchema).describe(\"A list of all communication logs associated with this client.\"),\n});\nexport type ClientOverviewInput = z.infer<typeof ClientOverviewInputSchema>;\n\nconst ClientOverviewOutputSchema = z.object({\n    summary: z.string().describe(\"A high-level summary of the client's current standing and relationship.\"),\n    projectStatus: z.string().describe(\"An overview of the client's project statuses, mentioning active, completed, or overdue projects.\"),\n    communicationInsights: z.string().describe(\"Key insights from recent communications, including sentiment and important discussion points.\"),\n    risksAndRecommendations: z.string().describe(\"Identified potential risks (e.g., approaching deadlines, negative sentiment) and actionable recommendations.\"),\n});\nexport type ClientOverviewOutput = z.infer<typeof ClientOverviewOutputSchema>;\n\nexport async function generateClientOverview(input: ClientOverviewInput): Promise<ClientOverviewOutput> {\n  return clientOverviewFlow(input);\n}\n\nconst prompt = ai.definePrompt({\n  name: 'clientOverviewPrompt',\n  input: { schema: ClientOverviewInputSchema },\n  output: { schema: ClientOverviewOutputSchema },\n  prompt: `You are an expert project manager and business analyst. Your task is to generate a comprehensive overview of a client based on their profile, associated projects, and communication logs. Provide a clear, concise, and actionable summary.\n\nAnalyze the following data:\n\nCLIENT INFORMATION:\n- Name: {{client.name}}\n- Company: {{client.company}}\n- Status: {{client.status}}\n- Cooperation Start Date: {{client.cooperationDate}}\n- Internal Notes: {{{client.notes}}}\n\nASSOCIATED PROJECTS:\n{{#if projects}}\n  {{#each projects}}\n  - Project: {{projectName}}\n    - Status: {{status}}\n    - Deadline: {{deadline}}\n    - PIC: {{pic}}\n  ---\n  {{/each}}\n{{else}}\n- No projects found for this client.\n{{/if}}\n\nCOMMUNICATION LOGS:\n{{#if logs}}\n  {{#each logs}}\n  - Date: {{communicationDate}}\n    - Channel: {{channel}}\n    - Notes: {{{notes}}}\n  ---\n  {{/each}}\n{{else}}\n- No communication logs found for this client.\n{{/if}}\n\nBased on all the information provided, generate the client overview. Be insightful and proactive in your analysis.\n- For \"summary\", provide a brief on the overall client health.\n- For \"projectStatus\", summarize the state of their projects.\n- For \"communicationInsights\", detect the overall tone/sentiment and pull out key recent topics.\n- For \"risksAndRecommendations\", identify potential issues (like tight deadlines, unresolved issues in logs) and suggest next steps. If there are no risks, state that.`,\n});\n\nconst clientOverviewFlow = ai.defineFlow(\n  {\n    name: 'clientOverviewFlow',\n    inputSchema: ClientOverviewInputSchema,\n    outputSchema: ClientOverviewOutputSchema,\n  },\n  async (input) => {\n    const { output } = await prompt(input);\n    return output!;\n  }\n);\n"],"names":[],"mappings":";;;;;AACA;;;;;;CAMC,GAED;AACA;AAAA;;;;;;AAEA,+DAA+D;AAC/D,MAAM,eAAe,uIAAA,CAAA,IAAC,CAAC,MAAM,CAAC;IAC5B,IAAI,uIAAA,CAAA,IAAC,CAAC,MAAM;IACZ,MAAM,uIAAA,CAAA,IAAC,CAAC,MAAM;IACd,SAAS,uIAAA,CAAA,IAAC,CAAC,MAAM;IACjB,OAAO,uIAAA,CAAA,IAAC,CAAC,MAAM;IACf,OAAO,uIAAA,CAAA,IAAC,CAAC,MAAM;IACf,SAAS,uIAAA,CAAA,IAAC,CAAC,MAAM;IACjB,QAAQ,uIAAA,CAAA,IAAC,CAAC,IAAI,CAAC;QAAC;QAAU;QAAW;QAAa;KAAY;IAC9D,iBAAiB,uIAAA,CAAA,IAAC,CAAC,MAAM;IACzB,OAAO,uIAAA,CAAA,IAAC,CAAC,MAAM;AACjB;AAEA,MAAM,gBAAgB,uIAAA,CAAA,IAAC,CAAC,MAAM,CAAC;IAC7B,IAAI,uIAAA,CAAA,IAAC,CAAC,MAAM;IACZ,aAAa,uIAAA,CAAA,IAAC,CAAC,MAAM;IACrB,YAAY,uIAAA,CAAA,IAAC,CAAC,MAAM;IACpB,UAAU,uIAAA,CAAA,IAAC,CAAC,MAAM;IAClB,QAAQ,uIAAA,CAAA,IAAC,CAAC,IAAI,CAAC;QAAC;QAAe;QAAa;QAAW;KAAU;IACjE,KAAK,uIAAA,CAAA,IAAC,CAAC,MAAM;AACf;AAEA,MAAM,YAAY,uIAAA,CAAA,IAAC,CAAC,MAAM,CAAC;IACzB,IAAI,uIAAA,CAAA,IAAC,CAAC,MAAM;IACZ,YAAY,uIAAA,CAAA,IAAC,CAAC,MAAM;IACpB,mBAAmB,uIAAA,CAAA,IAAC,CAAC,MAAM;IAC3B,SAAS,uIAAA,CAAA,IAAC,CAAC,IAAI,CAAC;QAAC;QAAS;QAAY;KAAU;IAChD,OAAO,uIAAA,CAAA,IAAC,CAAC,MAAM;AACjB;AAGA,MAAM,4BAA4B,uIAAA,CAAA,IAAC,CAAC,MAAM,CAAC;IACzC,QAAQ,aAAa,QAAQ,CAAC;IAC9B,UAAU,uIAAA,CAAA,IAAC,CAAC,KAAK,CAAC,eAAe,QAAQ,CAAC;IAC1C,MAAM,uIAAA,CAAA,IAAC,CAAC,KAAK,CAAC,WAAW,QAAQ,CAAC;AACpC;AAGA,MAAM,6BAA6B,uIAAA,CAAA,IAAC,CAAC,MAAM,CAAC;IACxC,SAAS,uIAAA,CAAA,IAAC,CAAC,MAAM,GAAG,QAAQ,CAAC;IAC7B,eAAe,uIAAA,CAAA,IAAC,CAAC,MAAM,GAAG,QAAQ,CAAC;IACnC,uBAAuB,uIAAA,CAAA,IAAC,CAAC,MAAM,GAAG,QAAQ,CAAC;IAC3C,yBAAyB,uIAAA,CAAA,IAAC,CAAC,MAAM,GAAG,QAAQ,CAAC;AACjD;AAGO,eAAe,uBAAuB,KAA0B;IACrE,OAAO,mBAAmB;AAC5B;AAEA,MAAM,SAAS,mHAAA,CAAA,KAAE,CAAC,YAAY,CAAC;IAC7B,MAAM;IACN,OAAO;QAAE,QAAQ;IAA0B;IAC3C,QAAQ;QAAE,QAAQ;IAA2B;IAC7C,QAAQ,CAAC;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;uKAwC4J,CAAC;AACxK;AAEA,MAAM,qBAAqB,mHAAA,CAAA,KAAE,CAAC,UAAU,CACtC;IACE,MAAM;IACN,aAAa;IACb,cAAc;AAChB,GACA,OAAO;IACL,MAAM,EAAE,MAAM,EAAE,GAAG,MAAM,OAAO;IAChC,OAAO;AACT;;;IA5DoB;;AAAA,+OAAA","debugId":null}},
    {"offset": {"line": 371, "column": 0}, "map": {"version":3,"sources":["file:///home/user/studio/.next-internal/server/app/%28main%29/clients/page/actions.js%20%28server%20actions%20loader%29"],"sourcesContent":["export {generateClientOverview as '408ad24d777f6cf798724ad5f3ab70f73ef34d842d'} from 'ACTIONS_MODULE0'\n"],"names":[],"mappings":";AAAA","debugId":null}},
    {"offset": {"line": 429, "column": 0}, "map": {"version":3,"sources":["file:///home/user/studio/src/app/%28main%29/clients/page.tsx/proxy.mjs"],"sourcesContent":["import { registerClientReference } from \"react-server-dom-turbopack/server.edge\";\nexport default registerClientReference(\n    function() { throw new Error(\"Attempted to call the default export of [project]/src/app/(main)/clients/page.tsx <module evaluation> from the server, but it's on the client. It's not possible to invoke a client function from the server, it can only be rendered as a Component or passed to props of a Client Component.\"); },\n    \"[project]/src/app/(main)/clients/page.tsx <module evaluation>\",\n    \"default\",\n);\n"],"names":[],"mappings":";;;AAAA;;uCACe,CAAA,GAAA,qPAAA,CAAA,0BAAuB,AAAD,EACjC;IAAa,MAAM,IAAI,MAAM;AAAmS,GAChU,iEACA","debugId":null}},
    {"offset": {"line": 443, "column": 0}, "map": {"version":3,"sources":["file:///home/user/studio/src/app/%28main%29/clients/page.tsx/proxy.mjs"],"sourcesContent":["import { registerClientReference } from \"react-server-dom-turbopack/server.edge\";\nexport default registerClientReference(\n    function() { throw new Error(\"Attempted to call the default export of [project]/src/app/(main)/clients/page.tsx from the server, but it's on the client. It's not possible to invoke a client function from the server, it can only be rendered as a Component or passed to props of a Client Component.\"); },\n    \"[project]/src/app/(main)/clients/page.tsx\",\n    \"default\",\n);\n"],"names":[],"mappings":";;;AAAA;;uCACe,CAAA,GAAA,qPAAA,CAAA,0BAAuB,AAAD,EACjC;IAAa,MAAM,IAAI,MAAM;AAA+Q,GAC5S,6CACA","debugId":null}},
    {"offset": {"line": 457, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"","debugId":null}}]
}