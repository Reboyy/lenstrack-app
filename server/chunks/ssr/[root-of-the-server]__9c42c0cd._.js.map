{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 207, "column": 0}, "map": {"version":3,"sources":["file:///home/user/studio/src/ai/genkit.ts"],"sourcesContent":["import {genkit} from 'genkit';\nimport {googleAI} from '@genkit-ai/googleai';\n\nexport const ai = genkit({\n  plugins: [googleAI()],\n  model: 'googleai/gemini-2.0-flash',\n});\n"],"names":[],"mappings":";;;AAAA;AAAA;AACA;AAAA;;;AAEO,MAAM,KAAK,CAAA,GAAA,uIAAA,CAAA,SAAM,AAAD,EAAE;IACvB,SAAS;QAAC,CAAA,GAAA,2KAAA,CAAA,WAAQ,AAAD;KAAI;IACrB,OAAO;AACT","debugId":null}},
    {"offset": {"line": 228, "column": 0}, "map": {"version":3,"sources":["file:///home/user/studio/src/ai/flows/summarize-logs-flow.ts"],"sourcesContent":["'use server';\n/**\n * @fileOverview An AI flow for summarizing communication logs.\n *\n * - summarizeLogs - A function that takes communication logs and returns a summary.\n */\n\nimport {ai} from '@/ai/genkit';\nimport {z} from 'genkit';\n\nconst LogSchema = z.object({\n  clientName: z.string(),\n  communicationDate: z.string(),\n  channel: z.string(),\n  notes: z.string(),\n});\n\nconst SummarizeLogsInputSchema = z.object({\n  logs: z.array(LogSchema).describe('A list of communication logs to be summarized.'),\n});\ntype SummarizeLogsInput = z.infer<typeof SummarizeLogsInputSchema>;\n\nconst SummarizeLogsOutputSchema = z.object({\n    summary: z.string().describe('A concise summary of the provided communication logs.'),\n});\ntype SummarizeLogsOutput = z.infer<typeof SummarizeLogsOutputSchema>;\n\nexport async function summarizeLogs(input: SummarizeLogsInput): Promise<SummarizeLogsOutput> {\n  return summarizeLogsFlow(input);\n}\n\nconst prompt = ai.definePrompt({\n  name: 'summarizeLogsPrompt',\n  input: {schema: SummarizeLogsInputSchema},\n  output: {schema: SummarizeLogsOutputSchema},\n  prompt: `You are an expert business analyst. Your task is to summarize a series of communication logs with a client.\nProvide a concise, high-level summary that captures the key points, decisions, and action items from the logs.\nFocus on the most recent and relevant information.\n\nHere are the communication logs:\n{{#each logs}}\n- Date: {{communicationDate}}\n- Client: {{clientName}}\n- Channel: {{channel}}\n- Notes: {{{notes}}}\n---\n{{/each}}\n`,\n});\n\nconst summarizeLogsFlow = ai.defineFlow(\n  {\n    name: 'summarizeLogsFlow',\n    inputSchema: SummarizeLogsInputSchema,\n    outputSchema: SummarizeLogsOutputSchema,\n  },\n  async (input) => {\n    const {output} = await prompt(input);\n    return output!;\n  }\n);\n"],"names":[],"mappings":";;;;;AACA;;;;CAIC,GAED;AACA;AAAA;;;;;;AAEA,MAAM,YAAY,uIAAA,CAAA,IAAC,CAAC,MAAM,CAAC;IACzB,YAAY,uIAAA,CAAA,IAAC,CAAC,MAAM;IACpB,mBAAmB,uIAAA,CAAA,IAAC,CAAC,MAAM;IAC3B,SAAS,uIAAA,CAAA,IAAC,CAAC,MAAM;IACjB,OAAO,uIAAA,CAAA,IAAC,CAAC,MAAM;AACjB;AAEA,MAAM,2BAA2B,uIAAA,CAAA,IAAC,CAAC,MAAM,CAAC;IACxC,MAAM,uIAAA,CAAA,IAAC,CAAC,KAAK,CAAC,WAAW,QAAQ,CAAC;AACpC;AAGA,MAAM,4BAA4B,uIAAA,CAAA,IAAC,CAAC,MAAM,CAAC;IACvC,SAAS,uIAAA,CAAA,IAAC,CAAC,MAAM,GAAG,QAAQ,CAAC;AACjC;AAGO,eAAe,cAAc,KAAyB;IAC3D,OAAO,kBAAkB;AAC3B;AAEA,MAAM,SAAS,mHAAA,CAAA,KAAE,CAAC,YAAY,CAAC;IAC7B,MAAM;IACN,OAAO;QAAC,QAAQ;IAAwB;IACxC,QAAQ;QAAC,QAAQ;IAAyB;IAC1C,QAAQ,CAAC;;;;;;;;;;;;AAYX,CAAC;AACD;AAEA,MAAM,oBAAoB,mHAAA,CAAA,KAAE,CAAC,UAAU,CACrC;IACE,MAAM;IACN,aAAa;IACb,cAAc;AAChB,GACA,OAAO;IACL,MAAM,EAAC,MAAM,EAAC,GAAG,MAAM,OAAO;IAC9B,OAAO;AACT;;;IAhCoB;;AAAA,+OAAA","debugId":null}},
    {"offset": {"line": 301, "column": 0}, "map": {"version":3,"sources":["file:///home/user/studio/.next-internal/server/app/%28main%29/logs/page/actions.js%20%28server%20actions%20loader%29"],"sourcesContent":["export {summarizeLogs as '405d46ee34c57318ed9262b421259592aef3acc8ae'} from 'ACTIONS_MODULE0'\n"],"names":[],"mappings":";AAAA","debugId":null}},
    {"offset": {"line": 359, "column": 0}, "map": {"version":3,"sources":["file:///home/user/studio/src/app/%28main%29/logs/page.tsx/proxy.mjs"],"sourcesContent":["import { registerClientReference } from \"react-server-dom-turbopack/server.edge\";\nexport default registerClientReference(\n    function() { throw new Error(\"Attempted to call the default export of [project]/src/app/(main)/logs/page.tsx <module evaluation> from the server, but it's on the client. It's not possible to invoke a client function from the server, it can only be rendered as a Component or passed to props of a Client Component.\"); },\n    \"[project]/src/app/(main)/logs/page.tsx <module evaluation>\",\n    \"default\",\n);\n"],"names":[],"mappings":";;;AAAA;;uCACe,CAAA,GAAA,qPAAA,CAAA,0BAAuB,AAAD,EACjC;IAAa,MAAM,IAAI,MAAM;AAAgS,GAC7T,8DACA","debugId":null}},
    {"offset": {"line": 373, "column": 0}, "map": {"version":3,"sources":["file:///home/user/studio/src/app/%28main%29/logs/page.tsx/proxy.mjs"],"sourcesContent":["import { registerClientReference } from \"react-server-dom-turbopack/server.edge\";\nexport default registerClientReference(\n    function() { throw new Error(\"Attempted to call the default export of [project]/src/app/(main)/logs/page.tsx from the server, but it's on the client. It's not possible to invoke a client function from the server, it can only be rendered as a Component or passed to props of a Client Component.\"); },\n    \"[project]/src/app/(main)/logs/page.tsx\",\n    \"default\",\n);\n"],"names":[],"mappings":";;;AAAA;;uCACe,CAAA,GAAA,qPAAA,CAAA,0BAAuB,AAAD,EACjC;IAAa,MAAM,IAAI,MAAM;AAA4Q,GACzS,0CACA","debugId":null}},
    {"offset": {"line": 387, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"","debugId":null}}]
}