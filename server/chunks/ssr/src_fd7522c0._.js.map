{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 7, "column": 0}, "map": {"version":3,"sources":["file:///home/user/studio/src/components/ui/card.tsx"],"sourcesContent":["import * as React from \"react\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst Card = React.forwardRef<\n  HTMLDivElement,\n  React.HTMLAttributes<HTMLDivElement>\n>(({ className, ...props }, ref) => (\n  <div\n    ref={ref}\n    className={cn(\n      \"rounded-lg border bg-card text-card-foreground shadow-sm\",\n      className\n    )}\n    {...props}\n  />\n))\nCard.displayName = \"Card\"\n\nconst CardHeader = React.forwardRef<\n  HTMLDivElement,\n  React.HTMLAttributes<HTMLDivElement>\n>(({ className, ...props }, ref) => (\n  <div\n    ref={ref}\n    className={cn(\"flex flex-col space-y-1.5 p-6\", className)}\n    {...props}\n  />\n))\nCardHeader.displayName = \"CardHeader\"\n\nconst CardTitle = React.forwardRef<\n  HTMLDivElement,\n  React.HTMLAttributes<HTMLDivElement>\n>(({ className, ...props }, ref) => (\n  <div\n    ref={ref}\n    className={cn(\n      \"text-2xl font-semibold leading-none tracking-tight\",\n      className\n    )}\n    {...props}\n  />\n))\nCardTitle.displayName = \"CardTitle\"\n\nconst CardDescription = React.forwardRef<\n  HTMLDivElement,\n  React.HTMLAttributes<HTMLDivElement>\n>(({ className, ...props }, ref) => (\n  <div\n    ref={ref}\n    className={cn(\"text-sm text-muted-foreground\", className)}\n    {...props}\n  />\n))\nCardDescription.displayName = \"CardDescription\"\n\nconst CardContent = React.forwardRef<\n  HTMLDivElement,\n  React.HTMLAttributes<HTMLDivElement>\n>(({ className, ...props }, ref) => (\n  <div ref={ref} className={cn(\"p-6 pt-0\", className)} {...props} />\n))\nCardContent.displayName = \"CardContent\"\n\nconst CardFooter = React.forwardRef<\n  HTMLDivElement,\n  React.HTMLAttributes<HTMLDivElement>\n>(({ className, ...props }, ref) => (\n  <div\n    ref={ref}\n    className={cn(\"flex items-center p-6 pt-0\", className)}\n    {...props}\n  />\n))\nCardFooter.displayName = \"CardFooter\"\n\nexport { Card, CardHeader, CardFooter, CardTitle, CardDescription, CardContent }\n"],"names":[],"mappings":";;;;;;;;;AAAA;AAEA;;;;AAEA,MAAM,qBAAO,CAAA,GAAA,qMAAA,CAAA,aAAgB,AAAD,EAG1B,CAAC,EAAE,SAAS,EAAE,GAAG,OAAO,EAAE,oBAC1B,8OAAC;QACC,KAAK;QACL,WAAW,CAAA,GAAA,mHAAA,CAAA,KAAE,AAAD,EACV,4DACA;QAED,GAAG,KAAK;;;;;;AAGb,KAAK,WAAW,GAAG;AAEnB,MAAM,2BAAa,CAAA,GAAA,qMAAA,CAAA,aAAgB,AAAD,EAGhC,CAAC,EAAE,SAAS,EAAE,GAAG,OAAO,EAAE,oBAC1B,8OAAC;QACC,KAAK;QACL,WAAW,CAAA,GAAA,mHAAA,CAAA,KAAE,AAAD,EAAE,iCAAiC;QAC9C,GAAG,KAAK;;;;;;AAGb,WAAW,WAAW,GAAG;AAEzB,MAAM,0BAAY,CAAA,GAAA,qMAAA,CAAA,aAAgB,AAAD,EAG/B,CAAC,EAAE,SAAS,EAAE,GAAG,OAAO,EAAE,oBAC1B,8OAAC;QACC,KAAK;QACL,WAAW,CAAA,GAAA,mHAAA,CAAA,KAAE,AAAD,EACV,sDACA;QAED,GAAG,KAAK;;;;;;AAGb,UAAU,WAAW,GAAG;AAExB,MAAM,gCAAkB,CAAA,GAAA,qMAAA,CAAA,aAAgB,AAAD,EAGrC,CAAC,EAAE,SAAS,EAAE,GAAG,OAAO,EAAE,oBAC1B,8OAAC;QACC,KAAK;QACL,WAAW,CAAA,GAAA,mHAAA,CAAA,KAAE,AAAD,EAAE,iCAAiC;QAC9C,GAAG,KAAK;;;;;;AAGb,gBAAgB,WAAW,GAAG;AAE9B,MAAM,4BAAc,CAAA,GAAA,qMAAA,CAAA,aAAgB,AAAD,EAGjC,CAAC,EAAE,SAAS,EAAE,GAAG,OAAO,EAAE,oBAC1B,8OAAC;QAAI,KAAK;QAAK,WAAW,CAAA,GAAA,mHAAA,CAAA,KAAE,AAAD,EAAE,YAAY;QAAa,GAAG,KAAK;;;;;;AAEhE,YAAY,WAAW,GAAG;AAE1B,MAAM,2BAAa,CAAA,GAAA,qMAAA,CAAA,aAAgB,AAAD,EAGhC,CAAC,EAAE,SAAS,EAAE,GAAG,OAAO,EAAE,oBAC1B,8OAAC;QACC,KAAK;QACL,WAAW,CAAA,GAAA,mHAAA,CAAA,KAAE,AAAD,EAAE,8BAA8B;QAC3C,GAAG,KAAK;;;;;;AAGb,WAAW,WAAW,GAAG","debugId":null}},
    {"offset": {"line": 88, "column": 0}, "map": {"version":3,"sources":["file:///home/user/studio/src/app/%28main%29/dashboard/page.tsx"],"sourcesContent":["\"use client\"\nimport { useState, useEffect } from 'react';\nimport { Card, CardContent, CardHeader, CardTitle } from \"@/components/ui/card\";\nimport { Users, Briefcase, UserPlus, TrendingUp } from \"lucide-react\";\nimport {\n  ResponsiveContainer,\n  LineChart,\n  Line,\n  XAxis,\n  YAxis,\n  CartesianGrid,\n  Tooltip,\n  Legend,\n} from \"recharts\";\nimport { getDatabase, ref, onValue } from 'firebase/database';\nimport { db } from '@/lib/firebase';\nimport { Client, Project } from '@/data/mock';\n\nconst chartData = [\n  { name: 'Jan', clients: 0, projects: 0 },\n  { name: 'Feb', clients: 0, projects: 0 },\n  { name: 'Mar', clients: 0, projects: 0 },\n  { name: 'Apr', clients: 0, projects: 0 },\n  { name: 'May', clients: 0, projects: 0 },\n  { name: 'Jun', clients: 0, projects: 0 },\n];\n\n\nexport default function DashboardPage() {\n  const [totalClients, setTotalClients] = useState(0);\n  const [activeProjects, setActiveProjects] = useState(0);\n  const [newClientsThisMonth, setNewClientsThisMonth] = useState(0);\n\n  useEffect(() => {\n    const clientsRef = ref(db, 'clients');\n    const projectsRef = ref(db, 'projects');\n\n    const unsubscribeClients = onValue(clientsRef, (snapshot) => {\n      const data = snapshot.val();\n      if (data) {\n        const clientsList: Client[] = Object.values(data);\n        setTotalClients(clientsList.length);\n        \n        const today = new Date();\n        const newThisMonth = clientsList.filter(c => {\n          if (!c.cooperationDate) return false;\n          const clientDate = new Date(c.cooperationDate);\n          return clientDate.getMonth() === today.getMonth() && clientDate.getFullYear() === today.getFullYear();\n        }).length;\n        setNewClientsThisMonth(newThisMonth);\n      } else {\n        setTotalClients(0);\n        setNewClientsThisMonth(0);\n      }\n    });\n\n    const unsubscribeProjects = onValue(projectsRef, (snapshot) => {\n      const data = snapshot.val();\n      if (data) {\n        const projectsList: Project[] = Object.values(data);\n        const active = projectsList.filter(p => p.status === 'In Progress').length;\n        setActiveProjects(active);\n      } else {\n        setActiveProjects(0);\n      }\n    });\n    \n    return () => {\n      unsubscribeClients();\n      unsubscribeProjects();\n    }\n  }, []);\n\n\n  return (\n    <div className=\"flex flex-col gap-6\">\n      <h1 className=\"font-headline text-3xl font-bold tracking-tight\">\n        Dashboard\n      </h1>\n\n      <div className=\"grid gap-4 md:grid-cols-2 lg:grid-cols-3\">\n        <StatCard\n          title=\"Total Clients\"\n          value={totalClients}\n          icon={Users}\n          description=\"All registered clients\"\n        />\n        <StatCard\n          title=\"Active Projects\"\n          value={activeProjects}\n          icon={Briefcase}\n          description=\"Projects currently in progress\"\n        />\n        <StatCard\n          title=\"New Clients This Month\"\n          value={newClientsThisMonth}\n          icon={UserPlus}\n          description=\"Clients registered in the current month\"\n        />\n      </div>\n\n      <Card className=\"col-span-1 lg:col-span-2 shadow-sm\">\n        <CardHeader>\n          <CardTitle className=\"flex items-center gap-2\">\n            <TrendingUp className=\"h-5 w-5\" />\n            Client & Project Trends\n          </CardTitle>\n        </CardHeader>\n        <CardContent className=\"h-[350px] w-full p-2\">\n          <ResponsiveContainer width=\"100%\" height=\"100%\">\n            <LineChart data={chartData}>\n              <CartesianGrid strokeDasharray=\"3 3\" stroke=\"hsl(var(--border))\" />\n              <XAxis dataKey=\"name\" stroke=\"hsl(var(--muted-foreground))\" fontSize={12} />\n              <YAxis stroke=\"hsl(var(--muted-foreground))\" fontSize={12}/>\n              <Tooltip\n                contentStyle={{\n                  backgroundColor: \"hsl(var(--background))\",\n                  borderColor: \"hsl(var(--border))\",\n                }}\n              />\n              <Legend />\n              <Line type=\"monotone\" dataKey=\"clients\" stroke=\"hsl(var(--primary))\" strokeWidth={2} name=\"New Clients\" />\n              <Line type=\"monotone\" dataKey=\"projects\" stroke=\"hsl(var(--accent))\" strokeWidth={2} name=\"New Projects\" />\n            </LineChart>\n          </ResponsiveContainer>\n        </CardContent>\n      </Card>\n    </div>\n  );\n}\n\ninterface StatCardProps {\n  title: string;\n  value: number | string;\n  icon: React.ElementType;\n  description: string;\n}\n\nfunction StatCard({ title, value, icon: Icon, description }: StatCardProps) {\n  return (\n    <Card className=\"shadow-sm transition-all hover:shadow-md\">\n      <CardHeader className=\"flex flex-row items-center justify-between space-y-0 pb-2\">\n        <CardTitle className=\"text-sm font-medium\">{title}</CardTitle>\n        <Icon className=\"h-4 w-4 text-muted-foreground\" />\n      </CardHeader>\n      <CardContent>\n        <div className=\"text-2xl font-bold\">{value}</div>\n        <p className=\"text-xs text-muted-foreground\">{description}</p>\n      </CardContent>\n    </Card>\n  );\n}\n"],"names":[],"mappings":"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","debugId":null}}]
}